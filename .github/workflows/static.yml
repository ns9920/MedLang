# Simple workflow for deploying Streamlit app to GitHub Pages
name: Deploy Streamlit app to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "recsys_app"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
  deploy-streamlit:
    name: Deploy Streamlit app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Streamlit
        run: pip install streamlit
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          branch: gh-pages
          publish_dir: ./recsys_app
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      # Output the URL of the deployed GitHub Pages site
      - name: Output Deployed URL
        run: |
          echo "Deployed URL: ${{ steps.deployment.outputs.page_url }}"
